{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.js","App.js","index.js","components/Section/Section.module.css"],"names":["module","exports","Section","title","children","className","styles","FeedbackOptions","options","onLeaveFeedback","buttonTypes","Object","keys","map","buttonType","button","type","onClick","propType","PropTypes","arrayOf","shape","good","number","bad","neutral","Statistics","total","positivePercentage","stats","stat","Notification","message","App","state","addPoint","key","setState","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","persentage","toFixed","this","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,OAAS,kC,mBCA3BD,EAAOC,QAAU,CAAC,QAAU,gC,kBCA5BD,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,KAAO,2B,uICW5CC,EATC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAMC,EAAR,EAAQA,SAAR,OACZ,qCACI,oBAAIC,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,M,iCCFT,SAASG,EAAT,GAAsD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,gBAC1BC,EAAcC,OAAOC,KAAKJ,GAChC,OACI,mCACKE,EAAYG,KAAI,SAAAC,GAAU,OACvB,wBACQT,UAAWC,IAAOS,OAClBC,KAAK,SACLC,QAAS,kBAAIR,EAAgBK,IAHrC,SAIKA,GAJQA,QAU7BP,EAAgBW,SAAS,CACrBV,QAAQW,IAAUC,QACdD,IAAUE,MAAM,CACZC,KAAKH,IAAUI,OACfC,IAAIL,IAAUI,OACdE,QAAQN,IAAUI,WAIfhB,Q,gBCXAmB,EAdQ,SAAC,GAAD,IAAEJ,EAAF,EAAEA,KAAMG,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,IAAKG,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,mBAA7B,OACnB,sBAAKvB,UAAWC,IAAOuB,MAAvB,UACI,uBAAMxB,UAAWC,IAAOwB,KAAxB,iBAAmCR,KACnC,uBAAMjB,UAAWC,IAAOwB,KAAxB,oBAAsCL,KACtC,uBAAMpB,UAAWC,IAAOwB,KAAxB,gBAAkCN,KAClC,uBAAMnB,UAAWC,IAAOwB,KAAxB,kBAAoCH,OACpC,uBAAMtB,UAAWC,IAAOwB,KAAxB,uBAAyCF,IAAzC,W,iBCKOG,EAVK,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OAChB,sBAAM3B,UAAWC,IAAO0B,QAAxB,SACKA,KCDYC,E,4MAGnBC,MAAM,CACNZ,KAAM,EACNG,QAAS,EACTD,IAAK,G,EAGLW,SAAS,SAAAC,GACP,EAAKC,UAAS,SAAAH,GACZ,sBACGE,EAAKF,EAAME,GAAK,O,EAKvBE,mBAAmB,WAEf,OADc3B,OAAO4B,OAAO,EAAKL,OAAOM,QAAO,SAACC,EAAIC,GAAL,OAAaD,EAAIC,IAAO,I,EAI3EC,gCAAgC,WAC5B,IAAMC,GAAe,EAAKV,MAAMZ,KAAK,EAAKgB,qBAAsB,KAAKO,QAAQ,GAC7E,OAAOD,EAAa,EAAIA,EAAa,G,uDAIrC,OACE,gCACI,cAAC,EAAD,CAASzC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEK,QAASsC,KAAKZ,MACdzB,gBAAiBqC,KAAKX,aAG1B,cAAC,EAAD,CAAShC,MAAM,aAAf,SACgC,IAA7B2C,KAAKR,qBAEJ,cAAC,EAAD,CAAcN,QAAU,sBAExB,cAAC,EAAD,CACAV,KAAMwB,KAAKZ,MAAMZ,KACjBG,QAASqB,KAAKZ,MAAMT,QACpBD,IAAKsB,KAAKZ,MAAMV,IAChBG,MAAOmB,KAAKR,mBACZV,mBAAsBkB,KAAKH,2C,GA9CVI,aAAZd,EACZe,aAAe,GCHxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCN1BrD,EAAOC,QAAU,CAAC,MAAQ,0B","file":"static/js/main.2e93081b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__fw9wD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__5kkZ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Statistics_stats__1A0T0\",\"stat\":\"Statistics_stat__2Mt4h\"};","import React from 'react';\r\nimport styles from './Section.module.css';\r\nimport PropTypes from 'prop-types'\r\nconst Section = ({title,children})=> (\r\n    <>\r\n        <h2 className={styles.title}>{title}</h2>\r\n        {children}\r\n    </>\r\n)\r\nSection.propTypes={\r\n    title: PropTypes.string,\r\n}\r\nexport default Section","import React from 'react';\r\nimport styles from './FeedbackOptions.module.css';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction FeedbackOptions ({options, onLeaveFeedback}){\r\n    const buttonTypes = Object.keys(options);\r\n    return(\r\n        <>\r\n            {buttonTypes.map(buttonType=>(\r\n                <button key={buttonType} \r\n                        className={styles.button}\r\n                        type=\"button\" \r\n                        onClick={()=>onLeaveFeedback(buttonType)}>\r\n                    {buttonType}\r\n                </button>\r\n            ))}\r\n        </> \r\n    )\r\n}\r\nFeedbackOptions.propType={\r\n    options:PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            good:PropTypes.number,\r\n            bad:PropTypes.number,\r\n            neutral:PropTypes.number,\r\n        })\r\n    )\r\n}\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport styles from './Statistics.module.css';\r\nimport PropTypes from 'prop-types'\r\n    const Statistics = ({good, neutral, bad, total, positivePercentage})=>(\r\n    <div className={styles.stats}>\r\n        <span className={styles.stat}>Good{good}</span>\r\n        <span className={styles.stat}>Neutral{neutral}</span>\r\n        <span className={styles.stat}>bad{bad}</span> \r\n        <span className={styles.stat}>Total{total()}</span>\r\n        <span className={styles.stat}>persentage{positivePercentage()}%</span>\r\n    </div>   \r\n)\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n}\r\nexport default Statistics\r\n","import React from 'react';\r\nimport styles from './Notification.module.css';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Notification =({message})=>(\r\n    <span className={styles.message}>\r\n        {message}\r\n    </span>\r\n)\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n}\r\n\r\nexport default Notification\r\n","import React, { Component } from 'react';\nimport Section from './components/Section/Section'\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification'\nexport default class App extends Component {\n  static defaultProps = {}\n\n  state={\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  } \n  \n  addPoint=key=>{\n    this.setState(state=>{\n      return{       \n        [key]:state[key]+1,\n      }\n    })\n  }\n\n  countTotalFeedback=()=>{ \n      const total = Object.values(this.state).reduce((acc,value)=>acc+value, 0);\n      return total;\n  }   \n\n  countPositiveFeedbackPercentage=()=>{\n      const persentage = ((this.state.good/this.countTotalFeedback())*100).toFixed(2);\n      return persentage > 0 ? persentage : 0;\n  }\n\n  render() {\n      return(\n        <div>\n            <Section title=\"Please leave feedback\">\n              <FeedbackOptions \n                options={this.state} \n                onLeaveFeedback={this.addPoint} \n              />\n            </Section>\n            <Section title=\"Statistics\">\n              {this.countTotalFeedback()=== 0 \n              ?\n                <Notification message = \"No feedback given\"/>\n              :\n                <Statistics \n                good={this.state.good} \n                neutral={this.state.neutral} \n                bad={this.state.bad}\n                total={this.countTotalFeedback} \n                positivePercentage = {this.countPositiveFeedbackPercentage}\n                />\n              }\n            </Section>     \n        </div>\n      )\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);    \r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1VndC\"};"],"sourceRoot":""}